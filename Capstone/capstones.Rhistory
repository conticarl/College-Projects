test_data <- all_data[obs, ]
extra_data <- all_data[-obs, ]
#quantitative variables
quant_keeps <- c("Bedrooms", "Electricity", "Fuel", "Gas", "Rooms", "Value", "Vehicles", "Water", "YearsLivedIn", "Taxes")
quant <- test_data[quant_keeps]
## qualitative variables
qual_keeps <- c("LotSize", "AgriSales", "HeatingType", "YearBuilt", "Value", "KitchenApps", "Plumbing")
qual <- test_data[qual_keeps]
## FIT 1
## linear fit of all factors
full_fit <- lm(formula = Value ~ factor(LotSize) + factor(YearBuilt) + factor(AgriSales) + factor(Plumbing) + factor(HeatingType) + factor(YearsLivedIn) + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + KitchenApps + Taxes, data = test_data)
## scatterplot matric of all factors
pairs(~ Value + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + Taxes, data = test_data, main = "Quantitative Variable Scatter Matrix")
## residual plots
par(mfrow = c(2, 2))
plot(full_fit)
## FIT 2 (boxcox)
## boxcox transformation
boxcox <- boxcox(full_fit)
lambda <- boxcox$x[which.max(boxcox$y)]
## applying lambda
test_data$ValueT <- - test_data$Value^lambda
## transformed fit
bc_fit <- lm(formula = ValueT ~ factor(LotSize) + factor(YearBuilt) + factor(AgriSales) + factor(Plumbing) + factor(HeatingType) + factor(YearsLivedIn) + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + KitchenApps + Taxes, data = test_data)
## plot fit
par(mfrow = c(2, 2))
plot(bc_fit)
## FIT 3 (removing variables)
## scatterplot matrix of quantitative variables
pairs(~ ValueT + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + Taxes, data = test_data, main = "Quantitative Variable Scatter Matrix")
## added-variable plots to fuels costs and vehicles
par(mfrow = c(2, 3))
avPlots(lm(ValueT~Electricity+Fuel+Gas+Vehicles+Water,data=test_data))
## boxplot on all qualitative varibles
par(mfrow = c(2, 3))
boxplot(ValueT ~ LotSize, data = test_data, main = "Transformed Value vs. Lot Size", xlab = "Lot Size", ylab = "Transformed Value")
boxplot(ValueT ~ YearBuilt, data = test_data, main = "Transformed Value vs. Year Built", xlab = "Year Built", ylab = "Transformed Value")
boxplot(ValueT ~ AgriSales, data = test_data, main = "Transformed Value vs. Agricultural Sales", xlab = "Agricultural Sales", ylab = "Transformed Value")
boxplot(ValueT ~ Plumbing, data = test_data, main = "Transformed Value vs. Plumbing", xlab = "Plumbing", ylab = "Transformed Value")
boxplot(ValueT ~ HeatingType, data = test_data, main = "Transformed Value vs. Heating Type", xlab = "Heating Type", ylab = "Transformed Value")
boxplot(ValueT ~ YearsLivedIn, data = test_data, main = "Transformed Value vs. Years Lived In", xlab = "Years Lived In", ylab = "Transformed Value")
rv_fit <- lm(ValueT ~ factor(AgriSales) + factor(YearBuilt) + factor(YearsLivedIn) + Bedrooms + Electricity + Gas + Rooms + Water + Taxes, data = test_data)
## FIT 4 (explanatory variables)
## best subset of remaining varibles
attach(test_data)
leaps <- regsubsets(ValueT ~ Bedrooms + Electricity + Gas + Rooms + Water + Taxes + AgriSales + YearBuilt + YearsLivedIn, data = test_data, nbest = 1, method = "backward", intercept = TRUE, nvmax = 8)
summary(leaps)
par(mfrow = c(1, 1))
subsets(leaps, statistic = "adjr2", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
subsets(leaps, statistic = "bic", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
subsets(leaps, statistic = "cp", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
par(mfrow = c(1,2))
plot(leaps, scale = "adjr2")
plot(leaps, type = 'b')
plot(leaps, scale = 'Cp')
step_fit <- lm(ValueT ~ Bedrooms + Electricity + Gas + Rooms + Water + Taxes + AgriSales + YearBuilt + YearsLivedIn, data = test_data)
step(step_fit, data = test_data, scope = bc_fit, direction = "both", test = "F")
## two final models
par(mfrow = c(2,2))
md_fit_1 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + AgriSales + YearBuilt, data = test_data)
md_fit_2 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + AgriSales, data = test_data)
md_fit_3 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = test_data)
md_fit_4 <- lm(ValueT ~ Electricity + Rooms + Taxes + YearBuilt, data = test_data)
par(mfrow = c(1,1))
summary(md_fit_1)
summary(md_fit_2)
summary(md_fit_3)
summary(md_fit_4)
## MODEL DIAGNOSTICS
## residual plots for fit 3
par(mfrow = c(1, 2))
yhat_3 <- fitted(md_fit_3)
mse3_1 <- summary(md_fit_3)$sigma^2
h_3 <- hatvalues(md_fit_3)
res3_1 <- residuals(md_fit_3)
res3_2 <- res3_1 / sqrt(mse3_1)
mse3_2 <- ( (294) * mse3_1 - (res3_1^2)/(1-h_3) ) / (293)
res3_3 <- res3_1 / sqrt(mse3_2 * (1-h_3))
plot(fitted.values(md_fit_3), res3_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_1), res3_2)
abline(a = 0, b = 0, col = "red")
## residual plots for fit 4
par(mfrow = c(1, 2))
yhat_4 <- fitted(md_fit_4)
mse4_1 <- summary(md_fit_4)$sigma^2
h_4 <- hatvalues(md_fit_4)
res4_1 <- residuals(md_fit_4)
res4_2 <- res4_1 / sqrt(mse4_1)
mse4_2 <- ( (294) * mse4_1 - (res4_1^2)/(1-h_4) ) / (293)
res4_3 <- res4_1 / sqrt(mse4_2 * (1-h_4))
plot(fitted.values(md_fit_4), res4_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_4), res4_2)
abline(a = 0, b = 0, col = "red")
## standard diagnostic plots for models 3 and 4
par(mfrow = c(1,2))
plot(md_fit_3)
plot(md_fit_4)
## cook's distance model 3
par(mfrow = c(1,2))
plot(test_data$ID, cooks.distance(md_fit_3), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 294), col = "red")
## cook's distance model 4
plot(test_data$ID, cooks.distance(md_fit_4), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 294), col = "red")
## Model Validation
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspe_3 <- sum( (ValueT - pred_3)^2 ) / 294
anova(md_fit_3)
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspe_3 <- sum( (ValueT - pred_3)^2 ) / 294
anova(md_fit_3)
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspe_4 <- sum( (ValueT - pred_4)^2 ) / 294
anova(md_fit_4)
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspe_3 <- sum( (ValueT - pred_3)^2 ) / 2594
anova(md_fit_3)
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspe_4 <- sum( (ValueT - pred_4)^2 ) / 2594
anova(md_fit_4)
View(extra_data)
View(pred_3)
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspe_4 <- sum( (ValueT - pred_4$fit)^2 ) / 2594
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspe_4 <- sum( (ValueT - pred_4)^2 ) / 2594
?attach
attach(test_data)
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspe_3 <- sum( (ValueT - pred_3)^2 ) / 2594
anova(md_fit_3)
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspe_4 <- sum( (ValueT - pred_4)^2 ) / 2594
anova(md_fit_4)
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspe_3 <- sum( (ValueT - pred_3)^2 ) / 2494
anova(md_fit_3)
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspe_4 <- sum( (ValueT - pred_4)^2 ) / 2495
anova(md_fit_4)
a4 <- anova(md_fit_4)
a4$`Mean Sq`
sum(a4$`Mean Sq`)
?confint
extra_data$ValueT <- - extra_data$Value^lambda
pred_fit_3 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = extra_data)
pred_fit_4 <- lm(ValueT ~ Electricity + Rooms + Taxes + YearBuilt, data = extra_data)
confint(pred_3)
confint(pred_fit_3)
confint(pred_fit_3)
summary(pred_fit_3)
knitr::opts_chunk$set(echo = TRUE)
## Setting Working Directory
setwd("/Users/carlconti/Downloads")
library(MASS)
library(vctrs)
library(readxl)
library(car)
library(leaps)
# Establishing two halves of data
file1 <- read_xlsx("/Users/carlconti/Downloads/capstone data.xlsx", sheet = "1-28")
file2 <- read_xlsx("/Users/carlconti/Downloads/capstone data.xlsx", sheet = "29-56")
names <- c("State", "HousingType", "LotSize", "AgriSales", "Tub/Shower", "Bedrooms", "Electricity", "Fuel", "Gas", "HeatingType", "Rooms", "Value", "Vehicles", "Water", "YearBuilt", "KitchenApps", "YearsLivedIn", "Plumbing", "Taxes", "ID")
## combining datasets (exluding NA's and non-HousingTypes #1's)
all_data <- rbind(file1, file2)
all_data["ID"] <- c(1:nrow(all_data))
all_data <- all_data[complete.cases(all_data), ]
names(all_data) <- names
all_data <- subset(all_data, HousingType  == 1)
## test data
n <- nrow(all_data)
obs <- sample(1:n, size=50000)
test_data <- all_data[obs, ]
## extra data
extra_data <- all_data[-obs, ]
## FIT 1
## linear fit of all factors
full_fit <- lm(formula = Value ~ factor(LotSize) + factor(YearBuilt) + factor(AgriSales) + factor(Plumbing) + factor(HeatingType) + factor(YearsLivedIn) + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + KitchenApps + Taxes, data = test_data)
## scatterplot matric of all factors
pairs(~ Value + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + Taxes, data = test_data, main = "Quantitative Variable Scatter Matrix")
## residual plots
par(mfrow = c(2, 2))
plot(full_fit)
## FIT 2 (boxcox)
## boxcox transformation
boxcox <- boxcox(full_fit)
lambda <- boxcox$x[which.max(boxcox$y)]
## applying lambda
test_data$ValueT <- - test_data$Value^lambda
## transformed fit
bc_fit <- lm(formula = ValueT ~ factor(LotSize) + factor(YearBuilt) + factor(AgriSales) + factor(Plumbing) + factor(HeatingType) + factor(YearsLivedIn) + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + KitchenApps + Taxes, data = test_data)
## plot fit
par(mfrow = c(2, 2))
plot(bc_fit)
## FIT 3 (removing variables)
## scatterplot matrix of quantitative variables
pairs(~ ValueT + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + Taxes, data = test_data, main = "Quantitative Variable Scatter Matrix")
## added-variable plots to fuels costs and vehicles
par(mfrow = c(2, 3))
avPlots(lm(ValueT~Electricity+Fuel+Gas+Vehicles+Water,data=test_data))
## boxplot on all qualitative varibles
par(mfrow = c(2, 3))
boxplot(ValueT ~ LotSize, data = test_data, main = "Transformed Value vs. Lot Size", xlab = "Lot Size", ylab = "Transformed Value")
boxplot(ValueT ~ YearBuilt, data = test_data, main = "Transformed Value vs. Year Built", xlab = "Year Built", ylab = "Transformed Value")
boxplot(ValueT ~ AgriSales, data = test_data, main = "Transformed Value vs. Agricultural Sales", xlab = "Agricultural Sales", ylab = "Transformed Value")
boxplot(ValueT ~ Plumbing, data = test_data, main = "Transformed Value vs. Plumbing", xlab = "Plumbing", ylab = "Transformed Value")
boxplot(ValueT ~ HeatingType, data = test_data, main = "Transformed Value vs. Heating Type", xlab = "Heating Type", ylab = "Transformed Value")
boxplot(ValueT ~ YearsLivedIn, data = test_data, main = "Transformed Value vs. Years Lived In", xlab = "Years Lived In", ylab = "Transformed Value")
rv_fit <- lm(ValueT ~ factor(AgriSales) + factor(YearBuilt) + factor(YearsLivedIn) + Bedrooms + Electricity + Gas + Rooms + Water + Taxes, data = test_data)
## FIT 4 (explanatory variables)
## best subset of remaining varibles
attach(test_data)
leaps <- regsubsets(ValueT ~ Bedrooms + Electricity + Gas + Rooms + Water + Taxes + AgriSales + YearBuilt + YearsLivedIn, data = test_data, nbest = 1, method = "backward", intercept = TRUE, nvmax = 8)
summary(leaps)
par(mfrow = c(1, 1))
subsets(leaps, statistic = "adjr2", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
subsets(leaps, statistic = "bic", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
subsets(leaps, statistic = "cp", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
par(mfrow = c(1,2))
plot(leaps, scale = "adjr2")
plot(leaps, type = 'b')
plot(leaps, scale = 'Cp')
step_fit <- lm(ValueT ~ Bedrooms + Electricity + Gas + Rooms + Water + Taxes + AgriSales + YearBuilt + YearsLivedIn, data = test_data)
step(step_fit, data = test_data, scope = bc_fit, direction = "both", test = "F")
## two final models
par(mfrow = c(2,2))
md_fit_1 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + AgriSales + YearBuilt, data = test_data)
md_fit_2 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + AgriSales, data = test_data)
md_fit_3 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = test_data)
md_fit_4 <- lm(ValueT ~ Electricity + Rooms + Taxes + YearBuilt, data = test_data)
par(mfrow = c(1,1))
summary(md_fit_1)
summary(md_fit_2)
summary(md_fit_3)
summary(md_fit_4)
## MODEL DIAGNOSTICS
## residual plots for fit 3
par(mfrow = c(1, 2))
yhat_3 <- fitted(md_fit_3)
mse3_1 <- summary(md_fit_3)$sigma^2
h_3 <- hatvalues(md_fit_3)
res3_1 <- residuals(md_fit_3)
res3_2 <- res3_1 / sqrt(mse3_1)
mse3_2 <- ( (294) * mse3_1 - (res3_1^2)/(1-h_3) ) / (293)
res3_3 <- res3_1 / sqrt(mse3_2 * (1-h_3))
plot(fitted.values(md_fit_3), res3_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_1), res3_2)
abline(a = 0, b = 0, col = "red")
## residual plots for fit 4
par(mfrow = c(1, 2))
yhat_4 <- fitted(md_fit_4)
mse4_1 <- summary(md_fit_4)$sigma^2
h_4 <- hatvalues(md_fit_4)
res4_1 <- residuals(md_fit_4)
res4_2 <- res4_1 / sqrt(mse4_1)
mse4_2 <- ( (294) * mse4_1 - (res4_1^2)/(1-h_4) ) / (293)
res4_3 <- res4_1 / sqrt(mse4_2 * (1-h_4))
plot(fitted.values(md_fit_4), res4_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_4), res4_2)
abline(a = 0, b = 0, col = "red")
## standard diagnostic plots for models 3 and 4
par(mfrow = c(1,2))
plot(md_fit_3)
plot(md_fit_4)
## cook's distance model 3
par(mfrow = c(1,2))
plot(test_data$ID, cooks.distance(md_fit_3), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 294), col = "red")
## cook's distance model 4
plot(test_data$ID, cooks.distance(md_fit_4), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 294), col = "red")
## Model Validation
attach(test_data)
## MSE and MSPR of model 3
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
msre_3 <- sum( (ValueT - pred_3)^2 ) / 2494
anova3_ <- anova(md_fit_3)
## MSE and MSPR of model 4
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspr_4 <- sum( (ValueT - pred_4)^2 ) / 2495
anova_4 <- anova(md_fit_4)
## model 3 and model 4 on prediction data
extra_data$ValueT <- - extra_data$Value^lambda
pred_fit_3 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = extra_data)
pred_fit_4 <- lm(ValueT ~ Electricity + Rooms + Taxes + YearBuilt, data = extra_data)
confint(md_fit_3)
summary(md_fit_3)
confint(md_fit_4)
summary(md_fit_4)
confint(pred_fit_3)
summary(pred_fit_3)
confint(pred_fit_4)
summary(pred_fit_4)
par(mfrow = c(1, 2))
yhat_4 <- fitted(md_fit_4)
mse4_1 <- summary(md_fit_4)$sigma^2
h_4 <- hatvalues(md_fit_4)
res4_1 <- residuals(md_fit_4)
res4_2 <- res4_1 / sqrt(mse4_1)
mse4_2 <- ( (2494) * mse4_1 - (res4_1^2)/(1-h_4) ) / (2494)
res4_3 <- res4_1 / sqrt(mse4_2 * (1-h_4))
plot(fitted.values(md_fit_4), res4_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_4), res4_2)
abline(a = 0, b = 0, col = "red")
par(mfrow = c(1, 2))
yhat_3 <- fitted(md_fit_3)
mse3_1 <- summary(md_fit_3)$sigma^2
h_3 <- hatvalues(md_fit_3)
res3_1 <- residuals(md_fit_3)
res3_2 <- res3_1 / sqrt(mse3_1)
mse3_2 <- ( (2594) * mse3_1 - (res3_1^2)/(1-h_3) ) / (2495)
res3_3 <- res3_1 / sqrt(mse3_2 * (1-h_3))
plot(fitted.values(md_fit_3), res3_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_1), res3_2)
abline(a = 0, b = 0, col = "red")
par(mfrow = c(1,2))
plot(md_fit_3)
plot(md_fit_4)
## cook's distance model 3
par(mfrow = c(1,2))
plot(test_data$ID, cooks.distance(md_fit_3), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 2494), col = "red")
## cook's distance model 4
plot(test_data$ID, cooks.distance(md_fit_4), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 2494), col = "red")
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspr_3 <- sum( (ValueT - pred_3)^2 ) / 2494
anova3_ <- anova(md_fit_3)
## MSE and MSPR of model 4
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspr_4 <- sum( (ValueT - pred_4)^2 ) / 2495
anova_4 <- anova(md_fit_4)
anova3_ <- anova(md_fit_3)
anova3_ <- anova(md_fit_3)
anova(md_fit_3)
summary(md_fit_3)
mse_4 <- mse(pred_4, md_fit_4)
View(anova3_)
anova_4$`Mean Sq`
sum(anova_4$`Mean Sq`)
anova(md_fit_4)
anova(md_fit_3)
confint(md_fit_3)
summary(md_fit_3)
confint(md_fit_4)
summary(md_fit_4)
confint(pred_fit_3)
summary(pred_fit_3)
confint(pred_fit_4)
summary(pred_fit_4)
summary(md_fit_3)
confint(md_fit_3)
summary(md_fit_3)
confint(md_fit_4)
summary(md_fit_4)
confint(pred_fit_3)
summary(pred_fit_3)
knitr::opts_chunk$set(echo = TRUE)
## Setting Working Directory
setwd("/Users/carlconti/Downloads")
library(MASS)
library(vctrs)
library(readxl)
library(car)
library(leaps)
# Establishing two halves of data
file1 <- read_xlsx("/Users/carlconti/Downloads/capstone data.xlsx", sheet = "1-28")
file2 <- read_xlsx("/Users/carlconti/Downloads/capstone data.xlsx", sheet = "29-56")
names <- c("State", "HousingType", "LotSize", "AgriSales", "Tub/Shower", "Bedrooms", "Electricity", "Fuel", "Gas", "HeatingType", "Rooms", "Value", "Vehicles", "Water", "YearBuilt", "KitchenApps", "YearsLivedIn", "Plumbing", "Taxes", "ID")
## combining datasets (exluding NA's and non-HousingTypes #1's)
all_data <- rbind(file1, file2)
all_data["ID"] <- c(1:nrow(all_data))
all_data <- all_data[complete.cases(all_data), ]
names(all_data) <- names
all_data <- subset(all_data, HousingType  == 1)
## test data
n <- nrow(all_data)
obs <- sample(1:n, size=2500)
test_data <- all_data[obs, ]
## extra data
extra_data <- all_data[-obs, ]
## FIT 1
## linear fit of all factors
full_fit <- lm(formula = Value ~ factor(LotSize) + factor(YearBuilt) + factor(AgriSales) + factor(Plumbing) + factor(HeatingType) + factor(YearsLivedIn) + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + KitchenApps + Taxes, data = test_data)
## scatterplot matric of all factors
pairs(~ Value + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + Taxes, data = test_data, main = "Quantitative Variable Scatter Matrix")
## residual plots
par(mfrow = c(2, 2))
plot(full_fit)
## FIT 2 (boxcox)
## boxcox transformation
boxcox <- boxcox(full_fit)
lambda <- boxcox$x[which.max(boxcox$y)]
## applying lambda
test_data$ValueT <- - test_data$Value^lambda
## transformed fit
bc_fit <- lm(formula = ValueT ~ factor(LotSize) + factor(YearBuilt) + factor(AgriSales) + factor(Plumbing) + factor(HeatingType) + factor(YearsLivedIn) + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + KitchenApps + Taxes, data = test_data)
## plot fit
par(mfrow = c(2, 2))
plot(bc_fit)
## FIT 3 (removing variables)
## scatterplot matrix of quantitative variables
pairs(~ ValueT + Bedrooms + Electricity + Fuel + Gas + Rooms + Vehicles + Water + Taxes, data = test_data, main = "Quantitative Variable Scatter Matrix")
## added-variable plots to fuels costs and vehicles
par(mfrow = c(2, 3))
avPlots(lm(ValueT~Electricity+Fuel+Gas+Vehicles+Water,data=test_data))
## boxplot on all qualitative varibles
par(mfrow = c(2, 3))
boxplot(ValueT ~ LotSize, data = test_data, main = "Transformed Value vs. Lot Size", xlab = "Lot Size", ylab = "Transformed Value")
boxplot(ValueT ~ YearBuilt, data = test_data, main = "Transformed Value vs. Year Built", xlab = "Year Built", ylab = "Transformed Value")
boxplot(ValueT ~ AgriSales, data = test_data, main = "Transformed Value vs. Agricultural Sales", xlab = "Agricultural Sales", ylab = "Transformed Value")
boxplot(ValueT ~ Plumbing, data = test_data, main = "Transformed Value vs. Plumbing", xlab = "Plumbing", ylab = "Transformed Value")
boxplot(ValueT ~ HeatingType, data = test_data, main = "Transformed Value vs. Heating Type", xlab = "Heating Type", ylab = "Transformed Value")
boxplot(ValueT ~ YearsLivedIn, data = test_data, main = "Transformed Value vs. Years Lived In", xlab = "Years Lived In", ylab = "Transformed Value")
rv_fit <- lm(ValueT ~ factor(AgriSales) + factor(YearBuilt) + factor(YearsLivedIn) + Bedrooms + Electricity + Gas + Rooms + Water + Taxes, data = test_data)
## FIT 4 (explanatory variables)
## best subset of remaining varibles
attach(test_data)
leaps <- regsubsets(ValueT ~ Bedrooms + Electricity + Gas + Rooms + Water + Taxes + AgriSales + YearBuilt + YearsLivedIn, data = test_data, nbest = 1, method = "backward", intercept = TRUE, nvmax = 8)
summary(leaps)
par(mfrow = c(1, 1))
subsets(leaps, statistic = "adjr2", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
subsets(leaps, statistic = "bic", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
subsets(leaps, statistic = "cp", legend = FALSE, cex.subsets = 0.4, xlim = c(1, 9))
par(mfrow = c(1,2))
plot(leaps, scale = "adjr2")
plot(leaps, type = 'b')
plot(leaps, scale = 'Cp')
step_fit <- lm(ValueT ~ Bedrooms + Electricity + Gas + Rooms + Water + Taxes + AgriSales + YearBuilt + YearsLivedIn, data = test_data)
step(step_fit, data = test_data, scope = bc_fit, direction = "both", test = "F")
## two final models
par(mfrow = c(2,2))
md_fit_1 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + AgriSales + YearBuilt, data = test_data)
md_fit_2 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + AgriSales, data = test_data)
md_fit_3 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = test_data)
md_fit_4 <- lm(ValueT ~ Electricity + Rooms + Taxes + YearBuilt, data = test_data)
par(mfrow = c(1,1))
summary(md_fit_1)
summary(md_fit_2)
summary(md_fit_3)
summary(md_fit_4)
## MODEL DIAGNOSTICS
## residual plots for fit 3
par(mfrow = c(1, 2))
yhat_3 <- fitted(md_fit_3)
mse3_1 <- summary(md_fit_3)$sigma^2
h_3 <- hatvalues(md_fit_3)
res3_1 <- residuals(md_fit_3)
res3_2 <- res3_1 / sqrt(mse3_1)
mse3_2 <- ( (2494) * mse3_1 - (res3_1^2)/(1-h_3) ) / (2495)
res3_3 <- res3_1 / sqrt(mse3_2 * (1-h_3))
plot(fitted.values(md_fit_3), res3_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_1), res3_2)
abline(a = 0, b = 0, col = "red")
## residual plots for fit 4
par(mfrow = c(1, 2))
yhat_4 <- fitted(md_fit_4)
mse4_1 <- summary(md_fit_4)$sigma^2
h_4 <- hatvalues(md_fit_4)
res4_1 <- residuals(md_fit_4)
res4_2 <- res4_1 / sqrt(mse4_1)
mse4_2 <- ( (2494) * mse4_1 - (res4_1^2)/(1-h_4) ) / (2494)
res4_3 <- res4_1 / sqrt(mse4_2 * (1-h_4))
plot(fitted.values(md_fit_4), res4_3)
abline(a = 0, b = 0, col = "red")
plot(fitted.values(md_fit_4), res4_2)
abline(a = 0, b = 0, col = "red")
## standard diagnostic plots for models 3 and 4
par(mfrow = c(1,2))
plot(md_fit_3)
plot(md_fit_4)
## cook's distance model 3
par(mfrow = c(1,2))
plot(test_data$ID, cooks.distance(md_fit_3), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 2494), col = "red")
## cook's distance model 4
plot(test_data$ID, cooks.distance(md_fit_4), ylim = c(0,0.12))
abline(h = 1 - qf(0.5, 6, 2494), col = "red")
## Model Validation
attach(test_data)
## MSE and MSPR of model 3
pred_3 <- predict(md_fit_3, newdata = extra_data, interval = "prediction")
mspr_3 <- sum( (ValueT - pred_3)^2 ) / 2494
anova(md_fit_3)
## MSE and MSPR of model 4
pred_4 <- predict(md_fit_4, newdata = extra_data, interval = "prediction")
mspr_4 <- sum( (ValueT - pred_4)^2 ) / 2495
anova(md_fit_4)
## model 3 and model 4 on prediction data
extra_data$ValueT <- - extra_data$Value^lambda
pred_fit_3 <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = extra_data)
pred_fit_4 <- lm(ValueT ~ Electricity + Rooms + Taxes + YearBuilt, data = extra_data)
confint(md_fit_3)
summary(md_fit_3)
confint(md_fit_4)
summary(md_fit_4)
confint(pred_fit_3)
summary(pred_fit_3)
confint(pred_fit_4)
summary(pred_fit_4)
all_data$ValueT <- - all_data$Value^lambda
final_fit <- lm(ValueT ~ Electricity + Gas + Rooms + Taxes + YearBuilt, data = all_data)
summary(final_fit)
savehistory("~/Documents/MSM-Finance /Spring 2020/Capstone/capstones.Rhistory")
